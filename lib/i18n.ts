export const languages = [
  { code: "en", name: "English", nativeName: "English", flag: "ЁЯЗ║ЁЯЗ╕", rtl: false },
  { code: "hi", name: "Hindi", nativeName: "рд╣рд┐рдВрджреА", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "bn", name: "Bengali", nativeName: "ржмрж╛ржВрж▓рж╛", flag: "ЁЯЗзЁЯЗй", rtl: false },
  { code: "te", name: "Telugu", nativeName: "р░др▒Жр░▓р▒Бр░Чр▒Б", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "mr", name: "Marathi", nativeName: "рдорд░рд╛рдареА", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "ta", name: "Tamil", nativeName: "родрооро┐ро┤рпН", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "gu", name: "Gujarati", nativeName: "ркЧрлБркЬрк░рк╛ркдрлА", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "kn", name: "Kannada", nativeName: "р▓Хр▓ир│Нр▓ир▓б", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "ml", name: "Malayalam", nativeName: "р┤ор┤▓р┤пр┤╛р┤│р┤В", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "pa", name: "Punjabi", nativeName: "рикрй░риЬри╛римрйА", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "or", name: "Odia", nativeName: "рмУрмбрм╝рм┐рмЖ", flag: "ЁЯЗоЁЯЗ│", rtl: false },
  { code: "as", name: "Assamese", nativeName: "ржЕрж╕ржорзАржпрж╝рж╛", flag: "ЁЯЗоЁЯЗ│", rtl: false },
]

export const translations = {
  en: {
    // Navigation
    dashboard: "Dashboard",
    games: "Games",
    features: "Features",
    profile: "Profile",
    settings: "Settings",

    // Login
    welcome_back: "Welcome Back",
    join_gramquest: "Join GramQuest",
    email_address: "Email Address",
    password: "Password",
    full_name: "Full Name",
    sign_in: "Sign In",
    sign_up: "Sign Up",
    create_account: "Create Account",
    already_have_account: "Already have an account? Sign In",
    dont_have_account: "Don't have an account? Sign Up",

    // Dashboard
    welcome_back_name: "Welcome back, {name}!",
    level: "Level",
    day_streak: "day streak",
    overall_progress: "Overall Progress",
    learning_streak: "Learning Streak",
    days_in_row: "Days in a row",
    keep_going: "Keep it going!",
    total_points: "Total Points",
    points_earned: "Points earned",
    subject_progress: "Subject Progress",
    complete: "Complete",

    // Games
    learning_games: "Learning Games",
    master_skills: "Master skills through play and earn amazing badges!",
    badge_collection: "Your Badge Collection",
    all_games: "All Games",
    coding: "Coding",
    math: "Math",
    science: "Science",
    language: "Language",

    // Achievements
    academic_excellence: "Academic Excellence",
    community_helper: "Community Helper",
    innovation_pioneer: "Innovation Pioneer",
    cultural_ambassador: "Cultural Ambassador",

    // Accessibility
    skip_to_content: "Skip to main content",
    menu: "Menu",
    close_menu: "Close menu",
    loading: "Loading",
    error: "Error",
    success: "Success",
    warning: "Warning",
    info: "Information",
  },
  hi: {
    // Navigation
    dashboard: "рдбреИрд╢рдмреЛрд░реНрдб",
    games: "рдЦреЗрд▓",
    features: "рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ",
    profile: "рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓",
    settings: "рд╕реЗрдЯрд┐рдВрдЧреНрд╕",

    // Login
    welcome_back: "рд╡рд╛рдкрд╕ рд╕реНрд╡рд╛рдЧрдд рд╣реИ",
    join_gramquest: "рдЧреНрд░рд╛рдордХреНрд╡реЗрд╕реНрдЯ рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛрдВ",
    email_address: "рдИрдореЗрд▓ рдкрддрд╛",
    password: "рдкрд╛рд╕рд╡рд░реНрдб",
    full_name: "рдкреВрд░рд╛ рдирд╛рдо",
    sign_in: "рд╕рд╛рдЗрди рдЗрди рдХрд░реЗрдВ",
    sign_up: "рд╕рд╛рдЗрди рдЕрдк рдХрд░реЗрдВ",
    create_account: "рдЦрд╛рддрд╛ рдмрдирд╛рдПрдВ",
    already_have_account: "рдкрд╣рд▓реЗ рд╕реЗ рдЦрд╛рддрд╛ рд╣реИ? рд╕рд╛рдЗрди рдЗрди рдХрд░реЗрдВ",
    dont_have_account: "рдЦрд╛рддрд╛ рдирд╣реАрдВ рд╣реИ? рд╕рд╛рдЗрди рдЕрдк рдХрд░реЗрдВ",

    // Dashboard
    welcome_back_name: "рд╡рд╛рдкрд╕ рд╕реНрд╡рд╛рдЧрдд рд╣реИ, {name}!",
    level: "рд╕реНрддрд░",
    day_streak: "рджрд┐рди рдХреА рд▓рдХреАрд░",
    overall_progress: "рд╕рдордЧреНрд░ рдкреНрд░рдЧрддрд┐",
    learning_streak: "рд╕реАрдЦрдиреЗ рдХреА рд▓рдХреАрд░",
    days_in_row: "рд▓рдЧрд╛рддрд╛рд░ рджрд┐рди",
    keep_going: "рдЬрд╛рд░реА рд░рдЦреЗрдВ!",
    total_points: "рдХреБрд▓ рдЕрдВрдХ",
    points_earned: "рдЕрд░реНрдЬрд┐рдд рдЕрдВрдХ",
    subject_progress: "рд╡рд┐рд╖рдп рдкреНрд░рдЧрддрд┐",
    complete: "рдкреВрд░реНрдг",

    // Games
    learning_games: "рд╢рд┐рдХреНрд╖рд╛ рдЦреЗрд▓",
    master_skills: "рдЦреЗрд▓ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдХреМрд╢рд▓ рдореЗрдВ рдорд╣рд╛рд░рдд рд╣рд╛рд╕рд┐рд▓ рдХрд░реЗрдВ рдФрд░ рдЕрджреНрднреБрдд рдмреИрдЬ рдЕрд░реНрдЬрд┐рдд рдХрд░реЗрдВ!",
    badge_collection: "рдЖрдкрдХрд╛ рдмреИрдЬ рд╕рдВрдЧреНрд░рд╣",
    all_games: "рд╕рднреА рдЦреЗрд▓",
    coding: "рдХреЛрдбрд┐рдВрдЧ",
    math: "рдЧрдгрд┐рдд",
    science: "рд╡рд┐рдЬреНрдЮрд╛рди",
    language: "рднрд╛рд╖рд╛",

    // Achievements
    academic_excellence: "рд╢реИрдХреНрд╖рдгрд┐рдХ рдЙрддреНрдХреГрд╖реНрдЯрддрд╛",
    community_helper: "рд╕рдореБрджрд╛рдпрд┐рдХ рд╕рд╣рд╛рдпрдХ",
    innovation_pioneer: "рдирд╡рд╛рдЪрд╛рд░ рдЕрдЧреНрд░рдгреА",
    cultural_ambassador: "рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд░рд╛рдЬрджреВрдд",

    // Accessibility
    skip_to_content: "рдореБрдЦреНрдп рд╕рд╛рдордЧреНрд░реА рдкрд░ рдЬрд╛рдПрдВ",
    menu: "рдореЗрдиреВ",
    close_menu: "рдореЗрдиреВ рдмрдВрдж рдХрд░реЗрдВ",
    loading: "рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ",
    error: "рддреНрд░реБрдЯрд┐",
    success: "рд╕рдлрд▓рддрд╛",
    warning: "рдЪреЗрддрд╛рд╡рдиреА",
    info: "рдЬрд╛рдирдХрд╛рд░реА",
  },
  bn: {
    // Navigation
    dashboard: "ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб",
    games: "ржЧрзЗржорж╕",
    features: "ржмрзИрж╢рж┐рж╖рзНржЯрзНржп",
    profile: "ржкрзНрж░рзЛржлрж╛ржЗрж▓",
    settings: "рж╕рзЗржЯрж┐ржВрж╕",

    // Login
    welcome_back: "рж╕рзНржмрж╛ржЧрждржо",
    join_gramquest: "ржЧрзНрж░рж╛ржоржХрзЛржпрж╝рзЗрж╕рзНржЯрзЗ ржпрзЛржЧ ржжрж┐ржи",
    email_address: "ржЗржорзЗржЗрж▓ ржарж┐ржХрж╛ржирж╛",
    password: "ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб",
    full_name: "ржкрзВрж░рзНржг ржирж╛ржо",
    sign_in: "рж╕рж╛ржЗржи ржЗржи",
    sign_up: "рж╕рж╛ржЗржи ржЖржк",
    create_account: "ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рждрзИрж░рж┐ ржХрж░рзБржи",
    already_have_account: "ржЗрждрж┐ржоржзрзНржпрзЗ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржЖржЫрзЗ? рж╕рж╛ржЗржи ржЗржи ржХрж░рзБржи",
    dont_have_account: "ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржирзЗржЗ? рж╕рж╛ржЗржи ржЖржк ржХрж░рзБржи",

    // Dashboard
    welcome_back_name: "рж╕рзНржмрж╛ржЧрждржо, {name}!",
    level: "рж╕рзНрждрж░",
    day_streak: "ржжрж┐ржирзЗрж░ ржзрж╛рж░рж╛",
    overall_progress: "рж╕рж╛ржоржЧрзНрж░рж┐ржХ ржЕржЧрзНрж░ржЧрждрж┐",
    learning_streak: "рж╢рзЗржЦрж╛рж░ ржзрж╛рж░рж╛",
    days_in_row: "ржкрж░ржкрж░ ржжрж┐ржи",
    keep_going: "ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи!",
    total_points: "ржорзЛржЯ ржкржпрж╝рзЗржирзНржЯ",
    points_earned: "ржЕрж░рзНржЬрж┐ржд ржкржпрж╝рзЗржирзНржЯ",
    subject_progress: "ржмрж┐рж╖ржпрж╝ ржЕржЧрзНрж░ржЧрждрж┐",
    complete: "рж╕ржорзНржкрзВрж░рзНржг",

    // Games
    learning_games: "рж╢рж┐ржХрзНрж╖рж╛ржорзВрж▓ржХ ржЧрзЗржо",
    master_skills: "ржЦрзЗрж▓рж╛рж░ ржорж╛ржзрзНржпржорзЗ ржжржХрзНрж╖рждрж╛ ржЕрж░рзНржЬржи ржХрж░рзБржи ржПржмржВ ржЕрж╕рж╛ржзрж╛рж░ржг ржмрзНржпрж╛ржЬ ржкрж╛ржи!",
    badge_collection: "ржЖржкржирж╛рж░ ржмрзНржпрж╛ржЬ рж╕ржВржЧрзНрж░рж╣",
    all_games: "рж╕ржм ржЧрзЗржо",
    coding: "ржХрзЛржбрж┐ржВ",
    math: "ржЧржгрж┐ржд",
    science: "ржмрж┐ржЬрзНржЮрж╛ржи",
    language: "ржнрж╛рж╖рж╛",

    // Achievements
    academic_excellence: "ржПржХрж╛ржбрзЗржорж┐ржХ рж╢рзНрж░рзЗрж╖рзНржарждрзНржм",
    community_helper: "ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рж╣рж╛ржпрж╝ржХ",
    innovation_pioneer: "ржЙржжрзНржнрж╛ржмржи ржЕржЧрзНрж░ржжрзВржд",
    cultural_ambassador: "рж╕рж╛ржВрж╕рзНржХрзГрждрж┐ржХ ржжрзВржд",

    // Accessibility
    skip_to_content: "ржорзВрж▓ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБрждрзЗ ржпрж╛ржи",
    menu: "ржорзЗржирзБ",
    close_menu: "ржорзЗржирзБ ржмржирзНржз ржХрж░рзБржи",
    loading: "рж▓рзЛржб рж╣ржЪрзНржЫрзЗ",
    error: "рждрзНрж░рзБржЯрж┐",
    success: "рж╕ржлрж▓рждрж╛",
    warning: "рж╕рждрж░рзНржХрждрж╛",
    info: "рждржерзНржп",
  },
}

export type Language = keyof typeof translations
export type TranslationKey = keyof (typeof translations)["en"]

export function getTranslation(language: Language, key: TranslationKey, params?: Record<string, string>): string {
  let translation = translations[language]?.[key] || translations.en[key] || key

  if (params) {
    Object.entries(params).forEach(([param, value]) => {
      translation = translation.replace(`{${param}}`, value)
    })
  }

  return translation
}
